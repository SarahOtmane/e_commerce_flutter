name: Flutter CI/CD â†’ Firebase Blue-Green

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.4"

      - name: Create .env file
        run: |
          cat > .env <<EOF
          publishableKey=${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          secretKey=${{ secrets.STRIPE_SECRET_KEY }}

          FIREBASE_API_KEY_WEB=${{ secrets.FIREBASE_API_KEY_WEB }}
          FIREBASE_APP_ID_WEB=${{ secrets.FIREBASE_APP_ID_WEB }}
          FIREBASE_MESSAGING_SENDER_ID_WEB=${{ secrets.FIREBASE_MESSAGING_SENDER_ID_WEB }}
          FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_AUTH_DOMAIN_WEB=${{ secrets.FIREBASE_AUTH_DOMAIN_WEB }}
          FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MEASUREMENT_ID_WEB=${{ secrets.FIREBASE_MEASUREMENT_ID_WEB }}
          EOF
          echo ".env created with $(wc -l < .env) lines"

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze
        run: flutter analyze --no-fatal-infos

      - name: Run tests
        run: flutter test --coverage

      - name: Build Flutter Web
        run: flutter build web --release

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

  deploy-blue-green:
    needs: build-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: web-build
          path: build/web

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Pick channel (blue/green)
        id: pick
        run: |
          if [ $(( $GITHUB_RUN_NUMBER % 2 )) -eq 0 ]; then
            CHANNEL="blue"
          else
            CHANNEL="green"
          fi
          echo "channel=$CHANNEL" >> $GITHUB_OUTPUT
          echo "Deploying to channel: $CHANNEL"

      - name: Deploy to inactive channel
        run: |
          CHANNEL=${{ steps.pick.outputs.channel }}
          firebase hosting:channel:deploy $CHANNEL \
            --project ${{ secrets.FIREBASE_PROJECT_ID }} \
            --token ${{ secrets.FIREBASE_TOKEN }} \
            --expires 7d

      - name: Smoke test
        run: |
          CHANNEL=${{ steps.pick.outputs.channel }}
          URL="https://${CHANNEL}--${{ secrets.FIREBASE_PROJECT_ID }}.web.app"
          echo "Testing $URL"
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" $URL)
          if [ "$STATUS" -ne 200 ]; then
            echo "Smoke test failed ($STATUS)"
            exit 1
          else
            echo "Smoke test passed"
          fi

      - name: Promote to live
        run: |
          firebase hosting:channel:deploy live \
            --project ${{ secrets.FIREBASE_PROJECT_ID }} \
            --token ${{ secrets.FIREBASE_TOKEN }}
