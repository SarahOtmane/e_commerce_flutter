name: K6 Load & Stress Tests

on:
  # D√©clench√© sur push vers main ou dev
  push:
    branches: [ main, dev ]
  # D√©clench√© sur pull request
  pull_request:
    branches: [ main ]
  # D√©clench√© manuellement
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type de test K6'
        required: true
        default: 'load'
        type: choice
        options:
        - load
        - stress
        - checkout
      target_url:
        description: 'URL cible (optionnel)'
        required: false
        default: 'https://shopflutter.web.app'
        type: string

jobs:
  k6-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        test-scenario: 
          - name: "Checkout Load Test"
            script: "checkout.js"
            description: "Test de charge sur le processus checkout"
          - name: "General Load Test" 
            script: "load-tests/load-test.js"
            description: "Test de charge g√©n√©ral"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup K6
        uses: grafana/k6-action@v0.3.1
        with:
          filename: ${{ matrix.test-scenario.script }}
        env:
          TARGET_URL: ${{ github.event.inputs.target_url || 'https://shopflutter.web.app' }}

      - name: Generate K6 HTML Report
        if: always()
        run: |
          # Cr√©er un rapport HTML simple
          echo "<!DOCTYPE html><html><head><title>K6 Test Report</title></head><body>" > k6-report.html
          echo "<h1>${{ matrix.test-scenario.name }}</h1>" >> k6-report.html
          echo "<p><strong>Description:</strong> ${{ matrix.test-scenario.description }}</p>" >> k6-report.html
          echo "<p><strong>Timestamp:</strong> $(date)</p>" >> k6-report.html
          echo "<p><strong>Branch:</strong> ${{ github.ref_name }}</p>" >> k6-report.html
          echo "<p><strong>Commit:</strong> ${{ github.sha }}</p>" >> k6-report.html
          echo "</body></html>" >> k6-report.html

      - name: Upload K6 Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-results-${{ matrix.test-scenario.name }}-${{ github.run_number }}
          path: |
            k6-report.html
            result.json
          retention-days: 30

  # Job s√©par√© pour tests de stress (plus intensifs)
  k6-stress-tests:
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'stress' || github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Stress Test
        uses: grafana/k6-action@v0.3.1
        with:
          filename: load-tests/stress-test.js
        env:
          TARGET_URL: ${{ github.event.inputs.target_url || 'https://shopflutter.web.app' }}

      - name: Upload Stress Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-stress-results-${{ github.run_number }}
          path: |
            result.json
          retention-days: 30

  # Job pour tests de checkout sp√©cifiques
  k6-checkout-tests:
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'checkout' || contains(github.event.head_commit.message, '[checkout-test]')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkout Specific Tests
        uses: grafana/k6-action@v0.3.1
        with:
          filename: checkout.js
        env:
          TARGET_URL: ${{ github.event.inputs.target_url || 'https://shopflutter.web.app' }}

      - name: Parse K6 Results
        if: always()
        run: |
          echo "## üìä R√©sultats Tests Checkout K6" >> $GITHUB_STEP_SUMMARY
          echo "- **Cible:** ${{ github.event.inputs.target_url || 'https://shopflutter.web.app' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "result.json" ]; then
            echo "‚úÖ Tests ex√©cut√©s avec succ√®s" >> $GITHUB_STEP_SUMMARY
            # Extraire des m√©triques basiques (si disponibles)
            echo "üìà **M√©triques:** Voir les artifacts pour plus de d√©tails" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå Erreur lors de l'ex√©cution des tests" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload Checkout Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-checkout-results-${{ github.run_number }}
          path: |
            result.json
          retention-days: 30

  # Notification des r√©sultats (optionnel)
  notify-results:
    runs-on: ubuntu-latest
    needs: [k6-tests, k6-stress-tests, k6-checkout-tests]
    if: always()
    
    steps:
      - name: Create Results Summary
        run: |
          echo "## üöÄ R√©sum√© Tests de Performance K6" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Application:** ShopFlutter E-Commerce" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Status des jobs
          echo "### Status des Tests:" >> $GITHUB_STEP_SUMMARY
          echo "- Load Tests: ${{ needs.k6-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Stress Tests: ${{ needs.k6-stress-tests.result }}" >> $GITHUB_STEP_SUMMARY  
          echo "- Checkout Tests: ${{ needs.k6-checkout-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üìÅ **Artifacts:** Consultez les artifacts pour les d√©tails complets des r√©sultats." >> $GITHUB_STEP_SUMMARY